---
- name: Gather OS specific variables
  ansible.builtin.include_vars: "{{ loop_vars }}"
  loop: "{{ query('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distro }}-{{ ansible_distro_version }}.yml"
        - "{{ ansible_distro }}-{{ ansible_distro_release }}.yml"
        - "{{ ansible_distro }}-{{ ansible_distro_major_version }}.yml"
        - "{{ ansible_distro }}.yml"
        - "{{ ansible_os_family | lower }}-family.yml"
        - "{{ ansible_system | lower }}.yml"
      paths:
        - "vars"
      skip: true
  loop_control:
    loop_var: loop_vars

- name: Install basic packages
  ansible.builtin.apt:
    name: "{{ _nodejs_required_packages }}"
    state: present
    update_cache: true

- name: "Install nodejs from repository"
  ansible.builtin.include_tasks: "install_in_{{ ansible_os_family | lower }}_from_repo.yml"
  when:
    - nodejs_version == _nodejs_version_short
    - nodejs_uses_debian_repository

- name: "Install nodejs from deb package"
  ansible.builtin.include_tasks: install_in_{{ ansible_os_family | lower }}_from_deb.yml
  when:
    - nodejs_version != _nodejs_version_short
    - not nodejs_uses_debian_repository

- name: "NodeJS | NPM | Configure HTTP proxy"
  ansible.builtin.command: npm config set proxy {{ nodejs_proxy_settings_http_proxy }}
  register: _nodejs_set_http_proxy
  changed_when: _nodejs_set_http_proxy.rc != 0
  when: nodejs_proxy_settings_http_proxy is defined

- name: NodeJS | NPM | Configure HTTPS proxy
  ansible.builtin.command: npm config set https-proxy {{ nodejs_proxy_settings_https_proxy }}
  register: _nodejs_set_https_proxy
  changed_when: _nodejs_set_https_proxy.rc != 0
  when: nodejs_proxy_settings_https_proxy is defined

- name: Install/uninstall npm packages
  community.general.npm:
    name: "{{ item.key }}"
    global: true
    ignore_scripts: "{{ nodejs_npm_.ignore_scripts }}"
    production: "{{ nodejs_npm_.production }}"
    registry: "{{ nodejs_npm_.registry }}"
    unsafe_perm: "{{ nodejs_npm_.unsafe_perm }}"
    version: "{{ nodejs_npm_.version }}"
    state: "{{ nodejs_npm_.state }}"
  vars:
    nodejs_npm_: "{{ nodejs_npm_default | combine(item.value) }}"
  loop: "{{ nodejs_npm | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
